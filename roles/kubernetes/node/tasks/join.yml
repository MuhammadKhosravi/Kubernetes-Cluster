- name: Reset Kubernetes component
  shell: "kubeadm reset --force --cri-socket=/var/run/{{ container_runtime }}/{{ container_runtime }}.sock"
  register: reset_cluster

- name: Read join command
  when: reset_cluster is succeeded
  set_fact:
    join_command: "{{lookup('ansible.builtin.file', '/tmp/join') }}"
  
- name: Join Kubernetes cluster
  when: reset_cluster is succeeded
  shell: "{{ join_command }}"
  register: join_cluster
  environment:
    no_proxy: "$no_proxy,.svc,.svc.cluster.local"

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory

- name: Check if admin.conf exists
  stat:
    path: "/etc/kubernetes/admin.conf"
  register: conf_exists

- name: Rename kubelet.conf to admin.conf if necessary
  shell: |
     mv /etc/kubernetes/kubelet.conf /etc/kubernetes/admin.conf
  when: not conf_exists.stat.exists

- name: Copy admin.conf to Home directory
  when: join_cluster is succeeded
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true

- name: Enable and check kubelet service
  systemd:
    name: kubelet
    daemon_reload: true
    state: started
    enabled: true
  register: started_kubelet
